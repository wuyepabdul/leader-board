(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nli {\n  list-style: none;\n  padding: 10px 5px;\n}\n\nli:nth-child(even) {\n  background-color: rgb(228, 228, 228);\n}\n\n.btn {\n  padding: 5px 20px;\n  box-shadow: 0 1px 6px;\n}\n\n.input-field {\n  width: 100%;\n  padding: 10px 5px;\n}\n\n.input-group {\n  margin: 15px 0;\n}\n\n.d-flex {\n  display: flex;\n}\n\n.success {\n  background-color: rgb(157, 245, 157);\n}\n\n.error {\n  background-color: rgb(238, 130, 130);\n}\n\n.info {\n  background-color: rgb(172, 190, 243);\n}\n\n.container {\n  padding: 20px;\n  margin-bottom: 80px;\n}\n\n.header {\n  height: 100%;\n  margin-top: 20px;\n  font-size: 50px;\n  font-weight: 900;\n  padding: 20px;\n}\n\n.alert {\n  display: none;\n  width: 50%;\n  margin: 0 auto 30px auto;\n  text-align: center;\n  padding: 20px;\n  font-weight: bold;\n}\n\n.visible {\n  display: block;\n}\n\n.invisible {\n  display: none;\n}\n\n.card {\n  justify-content: space-evenly;\n  width: 80%;\n  margin: 0 auto;\n}\n\n.scores-container {\n  width: 100%;\n}\n\n.scores-heading {\n  justify-content: space-between;\n  margin-bottom: 15px;\n}\n\narticle h2 {\n  font-size: 30px;\n}\n\n.scores-board {\n  border: 1px solid black;\n}\n\n.scores-board small {\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.form-section {\n  width: 100%;\n  margin-left: 40px;\n}\n\n.form-btn .btn {\n  float: right;\n}\n\n.footer {\n  position: fixed;\n  font-size: large;\n  text-align: center;\n  width: 100%;\n  bottom: 0;\n  padding: 20px 0;\n  background-color: rgb(228, 228, 228);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,iBAAiB;EACjB,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,iBAAiB;AACnB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,eAAe;EACf,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,UAAU;EACV,wBAAwB;EACxB,kBAAkB;EAClB,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,6BAA6B;EAC7B,UAAU;EACV,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,eAAe;EACf,oCAAoC;AACtC",sourcesContent:["* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nli {\n  list-style: none;\n  padding: 10px 5px;\n}\n\nli:nth-child(even) {\n  background-color: rgb(228, 228, 228);\n}\n\n.btn {\n  padding: 5px 20px;\n  box-shadow: 0 1px 6px;\n}\n\n.input-field {\n  width: 100%;\n  padding: 10px 5px;\n}\n\n.input-group {\n  margin: 15px 0;\n}\n\n.d-flex {\n  display: flex;\n}\n\n.success {\n  background-color: rgb(157, 245, 157);\n}\n\n.error {\n  background-color: rgb(238, 130, 130);\n}\n\n.info {\n  background-color: rgb(172, 190, 243);\n}\n\n.container {\n  padding: 20px;\n  margin-bottom: 80px;\n}\n\n.header {\n  height: 100%;\n  margin-top: 20px;\n  font-size: 50px;\n  font-weight: 900;\n  padding: 20px;\n}\n\n.alert {\n  display: none;\n  width: 50%;\n  margin: 0 auto 30px auto;\n  text-align: center;\n  padding: 20px;\n  font-weight: bold;\n}\n\n.visible {\n  display: block;\n}\n\n.invisible {\n  display: none;\n}\n\n.card {\n  justify-content: space-evenly;\n  width: 80%;\n  margin: 0 auto;\n}\n\n.scores-container {\n  width: 100%;\n}\n\n.scores-heading {\n  justify-content: space-between;\n  margin-bottom: 15px;\n}\n\narticle h2 {\n  font-size: 30px;\n}\n\n.scores-board {\n  border: 1px solid black;\n}\n\n.scores-board small {\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.form-section {\n  width: 100%;\n  margin-left: 40px;\n}\n\n.form-btn .btn {\n  float: right;\n}\n\n.footer {\n  position: fixed;\n  font-size: large;\n  text-align: center;\n  width: 100%;\n  bottom: 0;\n  padding: 20px 0;\n  background-color: rgb(228, 228, 228);\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=o.base?c[0]+o.base:c[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=o(n,r),A=0;A<a.length;A++){var d=t(a[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),s=t(565),c=t.n(s),A=t(216),d=t.n(A),l=t(589),p=t.n(l),u=t(426),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;const g=()=>localStorage.getItem("gameId")?JSON.parse(localStorage.getItem("gameId")):null,E=()=>{const n=document.querySelector(".alert");setTimeout((()=>{n.classList.remove("success","error","info"),n.classList.add("invisible")}),5e3)};(async()=>{const n=g(),e=`https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/${n}/scores`,t=document.querySelector(".scoreboard-container"),o=document.createElement("li"),r=document.createElement("small"),a=document.createElement("small"),i=document.querySelector(".alert");if(n){const{result:n}=await(async n=>(await fetch(n)).json())(e);n.length>0?n.forEach((n=>{r.textContent=`${n.user} :`,a.textContent=` ${n.score}`,o.appendChild(r),o.appendChild(a),t.appendChild(o.cloneNode(!0))})):(i.innerHTML="Scores have not been added",i.classList.remove("invisible"),i.classList.add("info","visible"))}})(),(()=>{const n={name:"Cricket"};window.addEventListener("load",(async()=>{if(!g()){const e=await(async(n,e)=>(await fetch("https://us-central1-js-capstone-backend.cloudfunctions.net/api/games",{method:"POST",body:JSON.stringify({name:n.name}),headers:{"Content-type":"application/json"}})).json())(n);if(e){const n=e.result.slice(14,34);localStorage.setItem("gameId",JSON.stringify(n))}}}))})(),(()=>{const n={user:"",score:""},e=document.querySelector("#username"),t=document.querySelector("#userscore"),o=document.querySelector("#add-score-btn"),r=document.querySelector(".alert");e.addEventListener("change",(e=>{n.user=e.target.value})),t.addEventListener("change",(e=>{n.score=e.target.value})),o.addEventListener("click",(async o=>{o.preventDefault();const a=`https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/${g()}/scores`;if(e.value.length<1||t.value.length<1)r.innerHTML="All fields are required",r.classList.remove("invisible","info","success"),r.classList.add("error","visible"),E();else{const o=await(async(n,e)=>(await fetch(e,{method:"POST",body:JSON.stringify({user:n.user,score:n.score}),headers:{"Content-type":"application/json"}})).json())(n,a);o&&(r.innerHTML="User score added successfully. Click REFRESH button",r.classList.remove("invisible","info"),r.classList.add("success","visible"),e.value="",t.value="",E())}}))})(),document.querySelector("#refresh-btn").addEventListener("click",(async()=>{window.location.reload()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,